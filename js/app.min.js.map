{"version":3,"file":"app.min.js","mappings":";mBAQA,GAAsB,oBAAXA,OAAwB,CACjC,IAAIC,EAAqB,CACnBC,eACiB,CAErB,GAEFF,OAAOG,iBAAiB,cAAe,KAAMF,GAC7CD,OAAOI,oBAAoB,cAAe,KAAMH,EAClD,CAEoC,oBAAXD,QAA0BA,OAAOK,WAAaL,OAAOK,UAAUC,WAAa,iBAAiBC,KAAKP,OAAOK,UAAUC,WAA2C,aAA9BN,OAAOK,UAAUC,UAA2BN,OAAOK,UAAUG,gBCnBtN,MAgBA,EAhBqBC,KACpB,MAAMC,EAAWC,UAAUC,iBAAiB,SACtCC,EAAWF,UAAUG,cAAc,cACzCJ,EAAOK,SAASC,IACfA,EAAMb,iBAAiB,SAAS,KAC3Ba,EAAMC,OACTD,EAAME,UAAUC,IAAI,uBACpBN,EAASK,UAAUC,IAAI,uBAEvBH,EAAME,UAAUE,OAAO,uBACvBP,EAASK,UAAUE,OAAO,qBAC3B,GACC,GACD,ECgDH,EA3DeC,KACd,MAAMC,EAAgBX,UAAUG,cAAc,iBACxCS,EAAgBZ,UAAUG,cAAc,eAExCU,GADgBb,SAASG,cAAc,QACvBH,UAAUG,cAAc,iBAa9CQ,GAAUnB,iBAAiB,SAAS,KACnCmB,GAAUJ,UAAUC,IAAI,kBACxBI,GAAML,UAAUC,IAAI,UAbrB,WACC,MAAMM,EAAezB,OAAO0B,QAC5Bf,SAASgB,KAAKT,UAAUC,IAAI,UAC5BR,SAASgB,KAAKC,QAAQC,SAAWJ,CAClC,CAWCK,EAAe,IAGhBN,GAAOrB,iBAAiB,SAAS,KAChCmB,GAAUJ,UAAUE,OAAO,kBAC3BG,GAAML,UAAUE,OAAO,UAbvBT,SAASgB,KAAKT,UAAUE,OAAO,UAC/BT,SAASgB,KAAKI,gBAAgB,gBAchB,IAGf,GADmB/B,OAAOgC,WAAW,sBACtBC,QAAS,CACNtB,SAASC,iBAAiB,cAElCG,SAASmB,IACjBA,EAAG/B,iBAAiB,SAAUgC,IAC7B,MAAMC,EAAUD,EAAEE,cAEZC,GADUF,EAAKtB,cAAc,cACnBsB,GAAMtB,cAAc,kBAEpCsB,EAAKlB,UAAUqB,OAAO,QAElBH,EAAKlB,UAAUsB,SAAS,QAC3BF,EAAQG,MAAMC,UAAa,GAAEJ,EAAQK,iBAErCL,EAAQG,MAAMC,UAAY,IAC3B,GACC,GAEJ,CAEA,MAAME,EAAYA,KACLjC,SAASkC,gBACjBJ,MAAMK,YAAY,eAAiB,GAAE9C,OAAO+C,gBAAgB,EAEjE/C,OAAOG,iBAAiB,SAAUyC,GAClCA,GAAW,EChBZ,EA1CaI,KACZ,IAAIC,EAAWtC,SAASC,iBAAiB,iBACrCsC,EAAavC,SAASC,iBAAiB,kBAM3C,SAASuC,EAASjB,GACjB,IAAIkB,EAAYlB,EAAGG,cACfgB,EAAUD,EAAUxB,QAAQyB,QAEhCH,EAAWnC,SAAQ,SAAUmB,GAC5BA,EAAGhB,UAAUE,OAAO,SACrB,IAEA6B,EAASlC,SAAQ,SAAUmB,GAC1BA,EAAGhB,UAAUE,OAAO,SACrB,IAEAT,SAASG,cAAc,IAAMuC,GAASnC,UAAUC,IAAI,UAEpDiC,EAAUlC,UAAUC,IAAI,SACzB,CAnBA8B,EAASlC,SAAQ,SAAUmB,GAC1BA,EAAG/B,iBAAiB,QAASgD,EAC9B,IAmBA,MAAMG,EAAa3C,UAAUG,cAAc,eACrCyC,EAAYD,GAAYxC,cAAc,eACtC0C,EAAUF,GAAY1C,iBAAiB,eACvC6C,EAAWH,GAAYxC,cAAc,mBAExCyC,IACFA,EAAUpD,iBAAiB,SAAS,IAAMmD,EAAWpC,UAAUqB,OAAO,YACtEiB,EAAQzC,SAAQ2C,IACfA,EAAOvD,iBAAiB,SAAS,KAChC,IAAIwD,EAAiBD,EAAO5C,cAAc,iBAAiB8C,UAC3DH,EAASG,UAAYD,EACrBL,EAAWpC,UAAUE,OAAO,SAAS,GACpC,IAEJ,EC/BAX,IACAY,IACA2B","sources":["webpack:///./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","webpack:///./source/js/components/input.js","webpack:///./source/js/components/burger.js","webpack:///./source/js/components/tabs.js","webpack:///./source/js/index.js"],"sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// Older browsers don't support event options, feature detect it.\n\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\nvar hasPassiveEvents = false;\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\n\n\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPosition = void 0;\nvar previousBodyPaddingRight = void 0;\n\n// returns true if `el` should be allowed to receive touchmove events.\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event;\n\n  // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n  if (allowTouchMove(e.target)) {\n    return true;\n  }\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1) return true;\n\n  if (e.preventDefault) e.preventDefault();\n\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n    }\n  }\n\n  // If previousBodyOverflowSetting is already set, don't set it again.\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight;\n\n    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting;\n\n    // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\nvar setPositionFixed = function setPositionFixed() {\n  return window.requestAnimationFrame(function () {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === undefined) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left\n      };\n\n      // Update the dom inside an animation frame \n      var _window = window,\n          scrollY = _window.scrollY,\n          scrollX = _window.scrollX,\n          innerHeight = _window.innerHeight;\n\n      document.body.style.position = 'fixed';\n      document.body.style.top = -scrollY;\n      document.body.style.left = -scrollX;\n\n      setTimeout(function () {\n        return window.requestAnimationFrame(function () {\n          // Attempt to check if the bottom bar appeared due to the position change\n          var bottomBarHeight = innerHeight - window.innerHeight;\n          if (bottomBarHeight && scrollY >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = -(scrollY + bottomBarHeight);\n          }\n        });\n      }, 300);\n    }\n  });\n};\n\nvar restorePositionSetting = function restorePositionSetting() {\n  if (previousBodyPosition !== undefined) {\n    // Convert the position from \"px\" to Int\n    var y = -parseInt(document.body.style.top, 10);\n    var x = -parseInt(document.body.style.left, 10);\n\n    // Restore styles\n    document.body.style.position = previousBodyPosition.position;\n    document.body.style.top = previousBodyPosition.top;\n    document.body.style.left = previousBodyPosition.left;\n\n    // Restore scroll\n    window.scrollTo(x, y);\n\n    previousBodyPosition = undefined;\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  }\n\n  // disableBodyScroll must not have been called on this targetElement before\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = true;\n    }\n  }\n};\n\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n\n    // Reset initial clientY.\n    initialClientY = -1;\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\n\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);\n      documentListenerAdded = false;\n    }\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n};\n\n","const inputAnimate = () => {\r\n\tconst inputs   = document?.querySelectorAll('input');\r\n\tconst btnInput = document?.querySelector('.form__btn');\r\n\tinputs.forEach((input) => {\r\n\t\tinput.addEventListener('input', () => {\r\n\t\t\tif (input.value) {\r\n\t\t\t\tinput.classList.add('form__input--active');\r\n\t\t\t\tbtnInput.classList.add('form__btn--active');\r\n\t\t\t} else {\r\n\t\t\t\tinput.classList.remove('form__input--active');\r\n\t\t\t\tbtnInput.classList.remove('form__btn--active');\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n};\r\n\r\nexport default inputAnimate;\r\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\n\r\nconst burger = () => {\r\n\tconst burgerEl      = document?.querySelector('[data-burger]');\r\n\tconst menu          = document?.querySelector('[data-menu]');\r\n\tconst targetElement = document.querySelector('body');\r\n\tconst close         = document?.querySelector('[data-close]');\r\n\r\n\tfunction disableScroll() {\r\n\t\tconst pagePosition = window.scrollY;\r\n\t\tdocument.body.classList.add('scroll');\r\n\t\tdocument.body.dataset.position = pagePosition;\r\n\t}\r\n\r\n\tfunction enableScroll() {\r\n\t\tdocument.body.classList.remove('scroll');\r\n\t\tdocument.body.removeAttribute('data-position');\r\n\t}\r\n\r\n\tburgerEl?.addEventListener('click', () => {\r\n\t\tburgerEl?.classList.add('burger--active');\r\n\t\tmenu?.classList.add('active');\r\n\t\t// disableBodyScroll(targetElement);\r\n\t\tdisableScroll();\r\n\t});\r\n\r\n\tclose?.addEventListener('click', () => {\r\n\t\tburgerEl?.classList.remove('burger--active');\r\n\t\tmenu?.classList.remove('active');\r\n\t\t// enableBodyScroll(targetElement);\r\n\t\tenableScroll();\r\n\t});\r\n\tconst mediaQuery = window.matchMedia('(max-width: 744px)');\r\n\tif (mediaQuery.matches) {\r\n\t\tconst dropDown = document.querySelectorAll('.nav__item');\r\n\r\n\t\tdropDown.forEach((el) => {\r\n\t\t\tel.addEventListener('click', (e) => {\r\n\t\t\t\tconst self    = e.currentTarget;\r\n\t\t\t\tconst control = self.querySelector('.nav__link');\r\n\t\t\t\tconst content = self?.querySelector('.nav__submenu');\r\n\r\n\t\t\t\tself.classList.toggle('open');\r\n\r\n\t\t\t\tif (self.classList.contains('open')) {\r\n\t\t\t\t\tcontent.style.maxHeight = `${content.scrollHeight}px`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontent.style.maxHeight = null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tconst appHeight = () => {\r\n\t\tconst doc = document.documentElement;\r\n\t\tdoc.style.setProperty('--app-height', `${window.innerHeight}px`);\r\n\t};\r\n\twindow.addEventListener('resize', appHeight);\r\n\tappHeight();\r\n};\r\n\r\nexport default burger;\r\n","const tabs = () => {\r\n\tlet tabLinks = document.querySelectorAll(\".tabs__button\");\r\n\tlet tabContent = document.querySelectorAll(\".tabs__content\");\r\n\r\n\ttabLinks.forEach(function (el) {\r\n\t\tel.addEventListener(\"click\", openTabs);\r\n\t});\r\n\r\n\tfunction openTabs(el) {\r\n\t\tlet btnTarget = el.currentTarget;\r\n\t\tlet country = btnTarget.dataset.country;\r\n\r\n\t\ttabContent.forEach(function (el) {\r\n\t\t\tel.classList.remove(\"active\");\r\n\t\t});\r\n\r\n\t\ttabLinks.forEach(function (el) {\r\n\t\t\tel.classList.remove(\"active\");\r\n\t\t});\r\n\r\n\t\tdocument.querySelector(\"#\" + country).classList.add(\"active\");\r\n\r\n\t\tbtnTarget.classList.add(\"active\");\r\n\t}\r\n\r\n\tconst optionMenu = document?.querySelector('.tabs__head');\r\n\tconst selectBtn = optionMenu?.querySelector('.tabs__text');\r\n\tconst options = optionMenu?.querySelectorAll('.tabs__item');\r\n\tconst selected = optionMenu?.querySelector('.tabs__selected');\r\n\r\n\tif(selectBtn) {\r\n\t\tselectBtn.addEventListener('click', () => optionMenu.classList.toggle('active'));\r\n\t\toptions.forEach(option => {\r\n\t\t\toption.addEventListener(\"click\", () => {\r\n\t\t\t\tlet selectedOption = option.querySelector('.tabs__button').innerHTML;\r\n\t\t\t\tselected.innerHTML = selectedOption;\r\n\t\t\t\toptionMenu.classList.remove('active');\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n};\r\nexport default tabs;\r\n","import DropPanel    from './components/DropPanel';\r\nimport MainMenu     from './components/MainMenu';\r\nimport inputAnimate from './components/input';\r\nimport burger       from './components/burger';\r\nimport tabs         from './components/tabs';\r\n\r\n// Init\r\nfunction init() {\r\n\tinputAnimate();\r\n\tburger();\r\n\ttabs();\r\n\r\n\r\n}\r\n\r\n(function () {\r\n\tinit();\r\n}());\r\n"],"names":["window","passiveTestOptions","passive","addEventListener","removeEventListener","navigator","platform","test","maxTouchPoints","inputAnimate","inputs","document","querySelectorAll","btnInput","querySelector","forEach","input","value","classList","add","remove","burger","burgerEl","menu","close","pagePosition","scrollY","body","dataset","position","disableScroll","removeAttribute","matchMedia","matches","el","e","self","currentTarget","content","toggle","contains","style","maxHeight","scrollHeight","appHeight","documentElement","setProperty","innerHeight","tabs","tabLinks","tabContent","openTabs","btnTarget","country","optionMenu","selectBtn","options","selected","option","selectedOption","innerHTML"],"sourceRoot":""}